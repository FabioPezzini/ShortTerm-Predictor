function [y1] = myNeuralNetworkFunction(x1)

% [y1] = myNeuralNetworkFunction(x1) takes these arguments:
%   x = Qx7 matrix, input #1
% and returns:
%   y = Qx1 matrix, output #1
% where Q is the number of samples.

% Use for example: myNeuralNetworkFunction([33.887096283666665, 34.322414632125000, 34.652158858541670, 33.578615787583340, 28.956420815750004, 25.413061986749995, 32.052170129833335])
% Atteso: 33.119001948874995

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1.xoffset = [24.31797041075;23.172601477125;22.442422479875;22.5968583299167;23.3843761827083;20.9613536440417;21.5943406915833];
x1_step1.gain = [0.12654083966704;0.113986166724709;0.10732830026968;0.10586037415822;0.15765345605169;0.182093246735325;0.113792874160171];
x1_step1.ymin = -1;

% Layer 1
b1 = [-2.2542046016340493431;2.0543498113426750251;1.6765049462408050385;1.4317424930643358749;1.13375086338456188;-1.1279845701112294343;0.75627738709146230534;-0.53929558994461335164;0.38291455257630063747;-0.1437099452541440725;-0.06457514207867690037;0.26193746302684889349;-0.69558705172086177093;0.57847752448160161265;-1.0834370988793633472;-1.1996336176097379678;-1.3078758931012535172;1.6401941633459309333;-1.834562170134784953;2.4660651274188611914];
IW1_1 = [1.2764182998018638315 -0.76576586168353444339 0.41789779593570935967 0.4797542204907495611 0.44943887809618643381 -0.59662578537878696583 1.2000268862161411754;-0.96960787648986523912 -0.65089674682897602498 0.91019357923737109761 -0.044586283514059001087 0.90875430012391300583 -0.97297809554358616335 0.54478510293971493805;-0.093871974666170074353 1.1751183944426275563 -1.2369553526266374721 -0.54578470367200782043 -0.61960567350615769477 -0.48118803118335540248 -0.84624091517767230375;-0.61408950189714861523 1.0442500147690940704 0.099418846676260524964 -0.89776731134276377411 -1.061346975483424826 0.12992687391988302914 1.1057899651809059982;-1.2682205571767424246 -0.061134926259725545783 0.87475975850052412053 -0.78842827713834939818 0.890521982944278645 0.73957720723711217747 0.55971557985633502152;0.96946868781164585727 -1.0050997785033568555 0.73850674768705726336 -0.88569132333236832988 -0.63938999214927205728 0.073507533232484378871 -0.86874762681812767173;-1.1530126669996765276 0.84876275941421719384 0.34795547593639969408 -0.11240607273627030438 1.0671458136832696617 -0.50229100195103471016 -1.0789777446781567694;0.33832058897431416256 -0.37913011069002905407 -0.67932770360418159861 -1.1940706825975879735 0.71411055226453457045 1.4033849080258864461 0.42427616735937051518;-0.86062260429233883308 0.49879752436971969143 -0.13033261860054254355 0.10283800823323482887 -0.9437308819469971688 1.2068520025745008706 0.99417063414524609044;0.63468460595223297194 0.82664189794124109945 1.5283113549884217441 0.51116560488820794728 -0.70581583017984728112 -0.079957288824525893367 -0.54888189765291450772;-0.71315787816573972258 0.85072739046785206263 -0.96699478435350227912 0.87989509804392163073 1.1113174981153060017 -0.57892541634327054911 -0.080167724845039076143;0.71923069398243844041 -0.52415611839091724722 0.93221241353098671656 1.0469014892456063315 0.1817810929549102672 1.1860468241713260085 -0.81691271438344770228;0.035460151037799460261 -0.95980806062196710737 0.54746892538235791825 0.16368284505873567647 -1.2309010953274999167 -1.2248934135925348965 0.11177892629733986174;0.19816203045279923156 -1.1019946894245193914 -0.46891391233149876117 -0.44713628428015028682 -0.67767886370300745025 -0.80155219981168013277 -1.2049015948565686696;-1.020954814453053805 0.40110538901575082393 0.83543545072117575412 -0.19436547003582271831 -0.054147102030463051259 -1.1307806602448053912 -1.1392926971848815754;-0.2711284215388804486 -1.1281312970763404113 1.0717744721356834425 -0.53320090955311139069 0.080839260308138968791 -0.97851571279517535196 0.99391987008579596452;-1.0573784507673709143 0.97422137059162339234 0.46047028360923258905 1.0603242686719571708 0.91984423245459689955 -0.56180827613862083236 0.64437026204853564693;0.62356472441496557657 0.93019396628686046302 1.0148557640460407203 -0.97818952534187386672 -0.010916187933568740481 -0.85986151405769983835 0.87599581751851063327;-0.93238451347048190154 -0.76135610520669549928 0.81975830381843417527 -0.79809000572151056474 -0.64365671117785883126 0.44611064819541801363 -1.0853652966163416238;0.66567416951818658699 -0.90575823987096659717 -0.35981371487867963577 0.97353151886955557881 -0.77240744965417240664 -0.18768166609051264992 1.0632582628374001033];

% Layer 2
b2 = 0.36004025347627233167;
LW2_1 = [-0.70900849723219516729 -0.42060532465442301842 0.069631398969221422468 0.16070803618159751336 0.54990583649725277571 0.28556360866085950256 -0.51605982848542708563 -0.39902732421501829752 -0.33891762177455192484 -0.45834129873905965491 -0.22423779282947947644 0.14717337537102592737 0.065913116807279195641 0.061075132863414913209 0.19299599000381661984 -0.25527797540708385693 0.50125540678026359043 0.27469079632325371643 -0.63567506491496061916 -0.86694694084047552174];

% Output 1
y1_step1.ymin = -1;
y1_step1.gain = 0.12654083966704;
y1_step1.xoffset = 24.31797041075;

% ===== SIMULATION ========

% Dimensions
Q = size(x1,1); % samples

% Input 1
x1 = x1';
xp1 = mapminmax_apply(x1,x1_step1);

% Layer 1
a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*xp1);

% Layer 2
a2 = repmat(b2,1,Q) + LW2_1*a1;

% Output 1
y1 = mapminmax_reverse(a2,y1_step1);
y1 = y1';
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings)
y = bsxfun(@minus,x,settings.xoffset);
y = bsxfun(@times,y,settings.gain);
y = bsxfun(@plus,y,settings.ymin);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n,~)
a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings)
x = bsxfun(@minus,y,settings.ymin);
x = bsxfun(@rdivide,x,settings.gain);
x = bsxfun(@plus,x,settings.xoffset);
end
